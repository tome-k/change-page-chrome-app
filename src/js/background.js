// Generated by CoffeeScript 1.7.1
var lastTabs;

lastTabs = {};

chrome.tabs.onActivated.addListener(function(_arg) {
  var tabId, windowId, _results;
  tabId = _arg.tabId, windowId = _arg.windowId;
  if (lastTabs[windowId] == null) {
    lastTabs[windowId] = [null];
  }
  lastTabs[windowId].push(tabId);
  _results = [];
  while (lastTabs[windowId].length > 2) {
    _results.push(lastTabs[windowId].shift());
  }
  return _results;
});

chrome.commands.onCommand.addListener(function(command) {
  if (command === "show-tab-switcher") {
    chrome.windows.getCurrent(function(currentWindow) {
      var width, windowOpts;
      width = currentWindow.width - 200;
      width = Math.min(600, width);
      windowOpts = {
        url: chrome.runtime.getURL('src/html/test.html'),
        left: currentWindow.left + (currentWindow.width - width) / 2,
        top: currentWindow.top + 50,
        width: width,
        height: currentWindow.height - 100,
        focused: true,
        type: 'popup'
      };
      return chrome.windows.create(windowOpts, function(window) {});
    });
    return;
    return chrome.tabs.query({
      active: true,
      currentWindow: true
    }, function(_arg) {
      var currentTab;
      currentTab = _arg[0];
      return chrome.tabs.query({
        currentWindow: true
      }, function(tabs) {
        var data;
        data = {
          tabs: tabs,
          lastActive: (lastTabs[currentTab.windowId] || [])[0]
        };
        return chrome.tabs.sendMessage(currentTab.id, data);
      });
    });
  }
});

chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
  if (request.switchToTabId) {
    return chrome.tabs.update(request.switchToTabId, {
      active: true
    });
  }
});
